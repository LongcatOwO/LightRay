intf_libs = # Interface dependencies.
impl_libs = # Implementation dependencies.
#import xxxx_libs += libhello%lib{hello}

# Public headers.
#
pub = [dir_path] ../../../include/lightray/debug/

include $pub

pub_hdrs = $($pub/ pub_hdrs)

./: lib{lightray-debug}: libul{lightray-debug}: $pub/{$pub_hdrs}

# Private headers and sources as well as dependencies.
#
libul{lightray-debug}: {hxx ixx txx cxx}{** -**.test...} $impl_libs $intf_libs

# Unit tests.
#
exe{*.test}:
{
  test = true
  install = false
}

for t: cxx{**.test...}
{
  d = $directory($t)
  n = $name($t)...

  ./: $d/exe{$n}: $t $d/{hxx ixx txx}{+$n} $d/testscript{+$n}
  $d/exe{$n}: libul{lightray-debug}: bin.whole = false
}

# Build options.
#
out_pfx_inc = [dir_path] $out_root/include/
src_pfx_inc = [dir_path] $src_root/include/
out_pfx_src = [dir_path] $out_root/src/
src_pfx_src = [dir_path] $src_root/src/

cxx.poptions =+ "-I$out_pfx_src" "-I$src_pfx_src" \
                "-I$out_pfx_inc" "-I$src_pfx_inc"

{hbmia obja}{*}: cxx.poptions += -DLIGHTRAY_DEBUG_STATIC_BUILD
{hbmis objs}{*}: cxx.poptions += -DLIGHTRAY_DEBUG_SHARED_BUILD

# Export options.
#
lib{lightray-debug}:
{
  cxx.export.poptions = "-I$out_pfx_inc" "-I$src_pfx_inc"
  cxx.export.libs = $intf_libs
}

liba{lightray-debug}: cxx.export.poptions += -DLIGHTRAY_DEBUG_STATIC
libs{lightray-debug}: cxx.export.poptions += -DLIGHTRAY_DEBUG_SHARED

# For pre-releases use the complete version to make sure they cannot be used
# in place of another pre-release or the final version. See the version module
# for details on the version.* variable values.
#
if $version.pre_release
  lib{lightray-debug}: bin.lib.version = "-$version.project_id"
else
  lib{lightray-debug}: bin.lib.version = "-$version.major.$version.minor"

# Don't install private headers.
#
{hxx ixx txx}{*}: install = false
